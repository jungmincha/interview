1.인스턴스 함수안에 스태틱 변수와 함수가 올수 있는 이유는?
 
 스태틱은 제일 처음 메인에 메모리방으로 올라가기 때문에 나중에 할당되는 인스턴스 함수에 올 수있다. 
 
 반대로 스태틱 함수에는 인스턴스 변수와 함수가 올 수 없다. 스태틱 함수가 이미 메모리에 생성이 되었기 때문이다.
 
 가끔 스태틱 함수 안에 변수들이 있는 것들을 보고 착각 할 수 있는데 이 경우는 인스턴스 변수가 아니라 지역 내에서만 효력이 발생하는 지역 변수일 뿐이다.
 
2.메소드 오버로딩이란?

호출된 메소드를 찾을 때 참조하게 되는 두 정보이다. 

-메소드의 이름 
-메소드의 매개변수 정보이다.

c언어에서는 함수 오버로딩이 불가능했지만 자바에서는 가능하다.

 즉 메소드 오버로딩이란 같은 메서드 이름으로 매개변수의 타입과 갯수를 다르게 쓸 수 있는 것을 뜻한다
 


3.메소드 오버로딩을 적용한 대표적인 함수는?

 System.out.println(3.14);
 //System(클래스).out(인스턴스).println(함수)()(매개변수)
    	System.out.println('가');
    	System.out.println(7);
    								// 메소드 오버로딩 = 똑같은 함수이름 println 으로 ()매개변수의 갯수와 타입을 달리 해도 컴파일이 잘 작동되는 것!
                           

4.this 함수에 대하여 설명하시오.


5.this란 무엇인가?

자기 자신을 가르키는 객체를 뜻한다.

생성자를 호출한다.

중복된 코드를 줄이는 효과가 있다.


6.스트링 객체를 생성하는 2가지 방법은?
.아래의 결과를 예측하고,이유를 설명하시오.
String str1 = "Simple String";
String str2 = "Simple String";
   
      String str3 = new String("Simple String");
      String str4 = new String("Simple String");
   
      if(str1 == str2)
         System.out.println("str1과 str2는 동일 인스턴스 참조");
      else
         System.out.println("str1과 str2는 다른 인스턴스 참조");
   
      if(str3 == str4)
         System.out.println("str3과 str4는 동일 인스턴스 참조");
      else
         System.out.println("str3과 str4는 다른 인스턴스 참조");
    
=====출력 결과======

str1과 str2는 동일 인스턴스 참조simple String
//이 결과가 나오는 이유는 new를 선언하지 않고 다이렉트로 메모리에 들어갔기 때문이다. 
 문자열 상수 안에 똑같은 내용이 있으면 자동으로 인스턴스 풀에 문자열을 집어 넣는다. 두개 이상 똑같으면 한개만 올린다.(메모리 절약)
//String 을 string으로 바꾸면 문자열이 달라졌기 때문에 "다른" 이라고 출력된다.


str3과 str4는 다른 인스턴스 참조simple String    
 //new로 각각 개체 생성이 되기 때문에 서로 다른 메모리를 할당한다. 그러므로 "다른"이 출력된다.
         

7.immutable 에 대하여 설명하시오.

String 인스턴스는 immutable 인스턴스다.

생성되는 인스턴스를 최소화한다. 



8. 사용자로부터 받은 문자열(영문으로)에서 자음과 모음 개수를 계산하는 프로그램을 작성하라.

=========================================================================메인==============================================================================
class Anagram {
	public static void main(String [] args) {
		
		int num1 = 0 ;
		int num2 = 0 ;
		
		AnaGame myAna = new AnaGame();
		myAna.setStr("mynameisjungmin");
		myAna.showstr();
		
		
	}
}
=============================================================클래스======================================================================================

public class AnaGame {

	private String str;

	AnaGame() {

	}

	public String getStr() {
		return str;
	}

	public void setStr(String str) {
		this.str = str;

	}

	public void showstr() {

		int num1 = 0;
		int num2 = 0;

		System.out.println(str);

		for (int i = 0; i < str.length(); i++) {
			switch (str.charAt(i)) {
			case 'a':
			case 'e':
			case 'i':
			case 'o':
			case 'u':
				num1++; //모음
				break;

			default:
				if ('a' <= str.charAt(i) && str.charAt(i) <= 'z') {
					num2++; //
				}
			}
		}
		System.out.println();
		System.out.println(str.length()+" 글자");
		System.out.println("모음 : " + num1);
		System.out.println("자음 : " + num2);

	}
}





9. 사용자로부터 키를 입력받아서 표준 체중을 계산한 후에 사용자의 체중과 비교하여 저체중인지, 표준인지, 과체중인지를 판단하는 프로그램을 작성하라. 표준 체중 계산식은 다음을 사용하라.
표준체중 = ( 키 - 100 ) * 0.9
=========================================================================메인==============================================================================
public class KeyMain {

	public static void main(String[] args) {

		double num1 ;
		double mykarada;
		String str;

		Key myKey = new Key();
		myKey.setNum1(174);
		myKey.setKara(75);
		myKey.setStr("안성국");
		myKey.showNum1();

	}

}

=========================================================================클래스==============================================================================


public class Key {

	private double num1;
	private double mykarada;
	private String str ;

	public String getStr() {
		return str;
	}

	public void setStr(String str) {
		this.str = str;
	}

	Key() {

	}

	public double getNum1() {
		return num1;
	}

	public void setNum1(double num1) {
		this.num1 = num1;
	}

	public double getKara() {
		return mykarada;
	}

	public void setKara(double mykarada) {
		this.mykarada = mykarada;
	}

	public void showNum1() {
		
		System.out.println("이름 : " + str);
		System.out.println("키 : " + num1);
		System.out.println("몸무게 : " + mykarada);
		num1 = (num1 - 100) * 0.9;

		System.out.println("표준 체중 : " + num1);

		if (mykarada > num1) {
			System.out.println("과체중입니다");
		} else if (mykarada < num1) {
			System.out.println("저체중입니다");
		} else {
			System.out.println("정상입니다");
		}

	}

}


10. 2와 100 사이에 있는 모든 소수(prime number)를 찾는 프로그램을 작성하라. 주어진 정수 k를 2부터 k-1까지의 숫자로 나누어서 나머지가 0인 것이 하나라도 있으면 소수가 아니다.


=================================================================메인=========================================================================================
public class Noboru {

	public static void main(String[] args) {
	
 Syosyu mySyo = new Syosyu();
		 mySyo.setNum1(100);
		 mySyo.syuShow();
}
}

================================================================클래스=========================================================================================

public class Syosyu {

	private int num1;
			int count ;
			
	public int getNum1() {
		return num1;
	}

	public void setNum1(int num1) {
		this.num1 = num1;
		this.count = count ;
	}

	public void syuShow() {  //소수란?  1과 자기 자신 빼고는 아무 숫자도 나눠지지 않는 수 9나 21 같은 숫자는 얼핏보면 홀수라서 소수 같지만 3으로 나눌 수 있는 3의 배수 숫자이다.

		for (int i = 2; i <= num1; i++) {
			boolean isPrime = true;

			for (int j = 2; j < i; j++) {
				if (i % j == 0) {
					isPrime = false;
				}
			}
			if (isPrime) {
				count++;
				System.out.println(i + " ");
			}

		}
		
		System.out.println("개수 : " + count);

	}
}

11.사용자에게 받은 문자열을 역순으로 화면에 출력하는 프로그램을 작성하시오.
입력:abcde
출력:edcba



