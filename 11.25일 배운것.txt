1.키워드란 무엇인가?

키워드는 class, statoc, void 등이며 예약어이기 때문에 정해진 용도 외에는 사용이 불가능하다.
그러므로 변수의 이름으로 사용 할 수 없다.



2.2의 보수법이란?

컴퓨터에서의 음의 정수를 표현하기 위해서 2의 보수법을 사용한다.


3.컴퓨터에서 음의 정수 표현방법에 대하여 설명하시오.

int num1 = -10;
 
/*
1. 10에대한 2진수의 2의보수가 num1에 들어간다.  
2.  32개 방 만든다.(4바이트=32비트)
3. 10을 2진수로 바꾸고 1의 보수를 구한 후 1을 더해(2의보수를 구함)
4. num1에 들어간다.
*/



4.-5가 컴퓨터에서의 2진수 값을 나타내시오.

11111011



5.실수에서 오차가 생기는 원인은 무엇인가?

0과 1사이의 실수에는 무한대의 수가 존재한다. 실수는 무한한데 메모리는 유한하다. 실수 전체를 한정된 메모리 안에 전부 담지 못한다.
그러므로 실수의 범위를 정하고 메모리에 들어가는 숫자(근사값)를 정한다. 근사값이기 때문에 오차가 생긴다.



6.실수의 표현법은(고정소수법, 부동소수법)을 설명하시오.


고정소수법은 정수를 표현하는 비트 수와 소수를 표현하는 비트 수를 미리 정해서 해당 비트 만큼만 사용해서 숫자를 표현하는 방식이다.
ex) 3400.0
부동소수법은 하나의 실수를 부호, 가수, 지수로 표현하는 방법이다.
ex) 3.4*10의 3승 = 3.4e3

-왜 e를 쓸까 ? 컴퓨터에서 지수 부분을 쓸수 없기 때문에(폰트로 컴퓨터에 입력불가) 밑10을 e로 대체해서 입력한다.



7.정밀도란 무엇인가요?

실수 즉 소수점 이하를 나타낼때 더 많이 표현되는 정도이다. float는 소수점 이하 6자리까지 double은 소수점 이하 15자리까지 표현가능하다.
실수는 정밀도 때문에 왠만해서는 double을 쓰는 것이 낫다.
문제는 연산할 때 소수점 이하 셋째 자리에서도 오차가 발생할 수 있다. 이점은 실무에서 고객과 잘 타협해야 한다.



8.상수란 무엇이며 변수와의 차이는?

변수는 변수 선언 후 초기화 되어 처음 값을 대입하고 그 뒤로 다시 선언하여 바꿀 수 있지만
상수는 한번 값을 할당 받게 되면 그것으로 끝이며 변할 수 없다. 
변수 앞에는 final을 붙여 상수를 정한다. 상수는 대문자로 쓰는 것이 관례이다. 
값이 변경되어서는 안되는 것을 final을 붙여 상수로 지정해야 한다. (중간에 값이 변경되면 안되는 것들을 구분해주기 위해!)



9.초기화란 무엇인가?

초기화는 변수를 선언 한 후, 해당 변수에 처음 값을 대입하는 것이다.



10.리터럴이란 무엇인가요?

자료형을 기반으로 표현이 되는 상수를 의미한다.

ex) int num1 = 5 + 7; 정수형은 int로 인식되기로 되어있다. 32bit 4바이트에 시스템이 최적화되어있기 때문이다.
    double num2 = 3.3 + 3.5; 상수형



11.아래의 내용이 에러가 나는 이유와 수정방법은?

System.out.println(3147483647 + 3147483648);

리터럴 정수의 데이터는 4바이트를 처리한다 범위를 넘어가면 에러가 생긴다.
그러므로 뒤에 L을 붙여서 long 타입으로 잡으라는 요청을 해야한다



12.자동 형변환과 명시적 형변환에 대하여 설명하시오.

자동 형변환 :  두 개의 데이터가 연산을 할 때, 수의 범위가 작은 데이터가 수의 범위가 넓은 데이터로 자동적으로 형식이 변환되는 것을 말한다. 
              ex) byte ->short-> int->long->float->double *long은 8바이트, float는 4바이트의 데이터를 차지함에도 불구하고 float이 더 넓다
                  왜나하면 float이 처리할 수 있는 수의 범위가 더 크기 때문이다.

명시적 형변환 : 변환하고자 하는 데이터를 강제적으로 변환해주는 것. 

//명시적 형변환 예시

double pi = 3.12415;
int wholeNumber = (int)pi; //정수형 소수점 버리고 결과값은 3

short num1 = 1;
short num2 = 3;
short num3 = (short) (num1 +num2); //num1과 num2 int로 계산될건데 short로 강제 형변환

long num1 = 3000000007L

int num2 = (int) num1;


13.아래의 에러가 나는 이유를 설명하고 수정하시오.

    	int a = 3;
    	int b = 4;
    	
    	double result = a / b;
    	
    	System.out.println(result);  a와 b에 들어가 있는 3과 4는 int의 정수형을 부여받았으므로 0.0이라는 결과가 도출된다. 
        그러므로(  (double)a / b  )  a 앞에 명시적 형변환을 해주거나 int a 를 double a로 바꾼다. b로 치환해도 상관없다. 
		//두 개의 연산을 실시 할 때 소수점에 맞추는 경향이 있어서 하나만 넣어주면 된다.



14.이스퀘이프 시퀀스의 종료를 나열하고 기능을 설명하시오.

                '\b'  백스페이스 문자
		'\t'  탭 문자
		'\n'  개 행 문자
		'\r'  캐리지 리턴
		'\\'  백슬레시 문자
   		'\''  작은 따옴표 문자



15.아래의 출력결과를 확인하고, 130이 나오는 이유를 설명하시오. 정답 : 65 + 65 = 130

System.out.println('A' + 'A');

'A'는 ''안에 들어가 있으므로 문자다. 또한 +가 들어가 있으므로 연산처리를 해주어야 한다. 일대일로 약속되어 있는 숫자를 아스키코드에서 찾는다.

아스키 코드표에 의하면 65이다. 연산처리를 해주어야 해서 숫자 그래도가 대입된다. 

  65 + 65이므로 정답은 130이다.
  

