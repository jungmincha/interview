1.상속을 UML로 표기해 보세요.
2.부모클래스와 자식클래스의 다른 용어들은?
3.super 키워드와 this 키워드의 차이는 무엇인가요?
4.단일 상속과 다중상속 이란?
5.다음 코드와 같이 과목과 점수가 짝을 이루도록 2개의 배열을 작성하라.

String course[] = {"Java", "C++", "HTML5", "컴퓨터구조", "안드로이드"};
int score[]  = {95, 88, 76, 62, 55};
그리고 다음 예시와 같이 과목 이름을 입력받아 점수를 출력하는 프로그램을 작성하라. "그만"을 입력받으면 종료한다. (Java는 인덱스 0에 있으므로 score[0]을 출력)

과목 이름 >> Jaba
없는 과목입니다.
과목 이름 >> Java
Java의 점수는 95
과목 이름 >> 안드로이드
안드로이드의 점수는 55
과목 이름 >> 그만
[Hint] 문자열을 비교하기 위해서는 String 클래스의 equals()메소드를 이용해야 한다.

String name;
if(course[i].equals(name)) {
    int n = score[i];
    ...
}
6.다음은 2차원 상의 한 점을 표현하는 Point 클래스이다.

class Point {
   private int x, y;
   public Point(int x, int y) { this.x = x; this.y = y; }
   public int getX() { return x; }
   public int getY() { return y; }
   protected void move(int x, int y) { this.x =x; this.y = y; }
}


Point를 상속받아 색을 가진 점을 나타내는 ColorPoint 클래스를 작성하라. 다음 main() 메소드를 포함하고 실행 결과와 같이 출력되게 하라.

public static void main(String[] args) {
   ColorPoint cp = new ColorPoint(5, 5, "YELLOW");
   cp.setXY(10, 20);
   cp.setColor("RED");
   String str = cp.toString();
   System.out.println(str+"입니다. ");
}

=======================
RED색의 (10,20)의 점입니다. 



=================================================================메인==================================================================
public class MovieMAIN {

	public static void main(String[] args) {

		ColorPoint cp = new ColorPoint(5, 5, "YELLOW");
		cp.setXY(10, 20);
		cp.setColor("Red");
		String str = cp.toString();
		System.out.print(str + "입니다.");

	}

}
=================================================================클래스==================================================================
class Point {

	private int x, y;

	public Point(int x, int y) {
		this.x = x;
		this.y = y;
	}

	public int getX() {
		return x;
	}

	public int getY() {
		return y;
	}

	protected void move(int x, int y) {
		this.x = x;
		this.y = y;
	}
}
=================================================================상속받은 자식클래스==================================================================
class ColorPoint extends Point {

	private String color;

	public ColorPoint(int x, int y, String color) {
		super(x, y);
		this.color = color;
	}

	public void setXY(int x, int y) {
		super.move(x, y);
	}

	public void setColor(String color) {

		this.color = color;
	}

	public String toString() {
		System.out.println(color + "색의" + "(" + getX() + "," + getY() + ")의 점");

		return "";

	}

}


























7.Point를 상속받아 색을 가진 점을 나타내는 ColorPoint 클래스를 작성하라. 다음 main() 메소드를 포함하고 실행 결과와 같이 출력되게 하라.

public static void main(String[] args) {
   ColorPoint zeroPoint = new ColorPoint(); // (0,0) 위치의 BLACK 색 점
   System.out.println(zeroPoint.toString() + "입니다.");
   ColorPoint cp = new ColorPoint(10, 10); // (10,10) 위치의 BLACK 색 점
   cp.setXY(5,5);
   cp.setColor("RED");
   System.out.println(cp.toString()+"입니다.");
}
=========================
BLACK색의 (0,0) 점입니다.
RED색의 (5,5) 점입니다.



==================================================================point의 상속받은 자식 클래스============================================================
 class ColorPoint extends Point{
		
		String color ;
	
	public ColorPoint() {   메인의 값을 0.0 그리고 "black"으로 초기화 시켜준다 // ColorPoint zeroPoint = new ColorPoint();
		
		super(0, 0);
		this.color = "black";
		
	}
	
	public ColorPoint(int x , int y) {  메인에서 들어온 10, 10 값을 대입해준다. 변수 꼭 써줄것   //ColorPoint cp = new ColorPoint(10, 10)
		
		super(x, y);
	}
	
	public void setXY(int x , int y) 메인에서의 5, 5를 대입 해준다. 그리고 상속 받은 부모 클래스의 값을 가지고 와서 return 해준다. { //cp.setXY(5,5);
		super.move(x, y);
		return;
		
	}
	
	public void setColor(String color) 메인의 RED 값을 가져와서 결과값을 return { //cp.setColor("RED");
		this.color = color ;
		return;
	}
	
	public String toString() { 
		
		System.out.println(color + "색 의 ("+getX() +"." + getY() + ")점");
		return"";
	}

}







8.Point를 상속받아 3차원의 점을 나타내는 Point3D 클래스를 작성하라. 다음 main() 메소드를 포함하고 실행 결과와 같이 출력되게 하라.

public static void main(String[] args) {
   Point3D p = new Point3D(1,2,3); // 1,2,3은 각각 x, y, z축의 값.
   System.out.println(p.toString()+"입니다.");
   p.moveUp(); // z 축으로 위쪽 이동
   System.out.println(p.toString()+"입니다.");
   p.moveDown(); // z 축으로 아래쪽 이동
   p.move(10, 10); // x, y 축으로 이동
   System.out.println(p.toString()+"입니다.");
   p.move(100,  200, 300); // x, y, z축으로 이동
   System.out.println(p.toString()+"입니다.");
}
(1,2,3) 의 점입니다.
(1,2,4) 의 점입니다.
(10,10,3) 의 점입니다.
(100,200,300) 의 점입니다.

=============================================================상속 받은 클래스======================================================

300 에서 자꾸 에러가 난다...

문제 해결! move 와 Move를 헷갈려서 z축의 300 부분이 인식이 안되는 것
대소문자를 잘 구별해서 쓰도록 하자.


class Point3D extends Point {

	private int z;

	public Point3D(int x, int y, int z) {

		super(x, y);

		this.z = z;

	}

	public void moveUp() {

		this.z = z + 1;
		
	}

	public void moveDown() {
		this.z = z - 1;
		
	}

	public void move(int x, int y) {
		super.move(x, y);
	}

	public void move(int x, int y, int z) {
		super.move(x, y);
		this.z = z;
	}
	
	public int getZ() {
		return z ;
	}

	public String toString() {
		System.out.println("(" +getX()+"."+ getY()+"." + z + ") 의 점" );
		return "";
	}
}









9.배열을 이용하여 간단한 극장 예약 시스템을 작성하여 보자.

아주 작은 극장이라서 좌석이 10개 밖에 되지 않는다.

사용자가 예약을 하려고 하면 먼저 좌석 배치표를 보여준다.

즉, 예약이 끝난 좌석은 1로, 예약이 되지 않은 좌석은 0으로 나타낸다.
=========
출력
--------------------
0 1 2 3 4 5 6 7 8 9
--------------------
0 0 0 0 0 0 0 0 0 0

몇번째 좌석을 예약 하시겠습니까? 2
--------------------
0 1 2 3 4 5 6 7 8 9
--------------------
0 0 1 0 0 0 0 0 0 0


=====================================================================메인================================================================================

public class MovieMAIN {
	public static void main(String[] args) {

		Movie myMovie = new Movie();

		myMovie.outPut();

	}
}
=================================================================클래스====================================================================================

class Movie {

	int[] seat1 = new int[10];
	int[] seat2 = new int[10];
	int button;

	public Movie() {
		this.seat1 = seat1;
		this.seat2 = seat2;
	}

	public void seatArr() {

		for (int i = 0; i < seat1.length; i++) {
			seat1[i] = i;
		}

		for (int i = 0; i < seat2.length; i++) {
			seat2[i] = 0;
		}

	}

	public void seatInput() {
		System.out.println("-------------------");
		for (int i = 0; i < seat1.length; i++) {

			System.out.print(seat1[i] + " ");
		}
		System.out.println();
		System.out.println("-------------------");
		for (int i = 0; i < seat2.length; i++) {

			System.out.print(seat2[i] + " ");

		}
	}

	public void tiketing() {
		System.out.println();
		System.out.println("어느 곳을 예약 하시겠나요?");
		
		Scanner sc = new Scanner(System.in);
		button = sc.nextInt();
		System.out.println("-------------------");
		for (int i = 0; i < seat1.length; i++) {

			System.out.print(seat1[i] + " ");

			if (seat1[i] == button)
				seat2[i] = 1;
		}
		System.out.println();
		System.out.println("-------------------");
		for (int i = 0; i < seat2.length; i++) {

			System.out.print(seat2[i] + " ");
				
		}
		System.out.println();
		System.out.println(button + "번 자리입니다.");
	}

	public void outPut() {
		seatArr();
		seatInput();
		tiketing();
	}
}
