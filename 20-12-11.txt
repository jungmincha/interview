1.is a 관계와 has a 관계에 대하여 설명하시오.
2.다형성이란 무엇인가?
3.아래가 되지 않는 이유에 대하여 메모리 그림으로
설명하시오.MobilePhone(부모) SmartPhone(자식)
SmartPhone s = new MobilePhone();
4.메소드 오버라이딩 이란?
5.갬블링 게임을 만들어보자. 두 사람이 게임을 진행한다. 이들의 이름을 키보드로 입력 받으며 각 사람은 Person 클래스로 작성하라.
그러므로 프로그램에는 2개의 Person 객체가 생성되어야 한다. 두 사람은 번갈아 가면서 게임을 진행하는데 각 사람이 자기 차례에서 
<Enter> 키를 입력하면, 3개의 난수가 발생되고 이 숫자가 모두 같으면 승자가 되고 게임이 끝난다. 난수의 범위를 너무 크게 잡으면
3개의 숫자가 일치하게 나올 가능성이 적기 때문에 숫자의 범위는 1~3까지로 한다.

1번째 선수 이름>>수희
2번째 선수 이름>>연수
[수희]:
	3  1  1  아쉽군요!
[연수]:
	3  1  3  아쉽군요!
[수희]:
	2  2  1  아쉽군요!
[연수]:
	1  1  2  아쉽군요!
[수희]:
	3  3  3  수희님이 이겼습니다!

6.문제 10의 갬블링 게임을 n명이 하도록 수정하라. 실행 예시와 같이 게임에 참여하는 선수의 수를 입력받고 각 선수의 이름을 입력받도록 수정하라.

겜블링 게임에 참여할 선수 숫자>>3
1번째 선수 이름>>황
2번째 선수 이름>>이
3번째 선수 이름>>김
[황]:
	2  3  3  아쉽군요!
[이]:
	1  2  2  아쉽군요!
[김]:
	2  2  3  아쉽군요!
[황]:
	3  2  2  아쉽군요!
[이]:
	1  1  3  아쉽군요!
[김]:
	2  2  1  아쉽군요!
[황]:
	2  2  2  황님이 이겼습니다!

7.다음을 만족하는 클래스 Employee를 작성하시오
(8번문제부터는 이것과 관련된 문제입니다).

- 클래스 Employee(직원)은 클래스 Regular(정규직)와 Temporary(비정규직)의 상위 클래스

- 필드: 이름, 나이, 주소, 부서, 월급 정보를 필드로 선언

- 생성자 : 이름, 나이, 주소, 부서를 지정하는 생성자 정의

-메소드 printInfo() : 인자는 없고 자신의 필드 이름, 나이, 주소, 부서를 출력



=================================================================메인==============================================================================
	public class EmployeeMain {
	
		public static void main(String[] args) {
	
			Employee emplo = new Employee("홍길동", 28, "목포", "소프트웨어");
			emplo.printInfo();
	
		}
	
	}

================================================================클래스=============================================================================
public class Employee {

	private int  age;
	private String name , address , position;
	
	private int pay;
	

	public Employee(String name , int age , String address , String position) {

		this.name = name ;
		this.address = address;
		this.age = age;
		this.position = position;

	}

	public void printInfo() {
		
		System.out.println("나이 : " + age + "/ 이름 : " + name + "/ 주소 : " + address + "/ 부서 : " + position);
	}

}





8. 다음을 만족하는 클래스 Regular를 작성하시오.

- 클래스 Regular는 위에서 구현된 클래스 Employee의 하위 클래스

- 생성자 : 이름, 나이, 주소, 부서를 지정하는 상위 생성자 호출

- Setter : 월급 정보 필드를 지정

- 메소드 printInfo() : 인자는 없고 "정규직"이라는 정보와 월급을 출력
