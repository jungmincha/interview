
1.클로져란 무엇인가?

 클로저란 내부함수가 외부함수의 지역변수에 접근 할 수 있고, 
 외부함수는 외부함수의 지역변수를 사용하는 내부함수가 소멸될 때까지
 소멸되지 않는 특성을 의미한다.
 
 클로저의 사용 이유 : Closure로 정보은닉과 캡슐화를 제공할 수 있다.
 
 <script>
function funName(){
    return function(x){
	for(var i = 1 ; i < 10; i++){
	console.log(x + "*" + i + "=" + (x*i));
		}
	};
}
var returnFun = funName();
returnFun(4);
</script>
 
 

2.js를 이용하여, 구구단중 홀수단만 나오게 하시오.

<script>
		document.write("<h1>");
		document.write("구구단");
		document.write("</h1>");
		document.write("<table border=1>");

		document.write("<tr>");
		document.write("<td>1단</td>");
		document.write("<td>3단</td>");
		document.write("<td>5단</td>");
		document.write("<td>7단</td>");
		document.write("<td>9단</td>");
		
		document.write("</tr>");

		for (var i = 1; i <= 9; i++) {

			document.write("<tr>");

			for (var j = 1; j <= 9; j++) {
				
				if( j % 2 == 1){

				document.write("<td>");

				document.write(j + "*" + i + " = " + (j * i));

				document.write("</td>");
				}
			}
			document.write("<br>");
			document.write("</tr>");
		}
		document.write("</table>");
	</script>


3.부서별로 sal의 최소 값을 구하는데, 30번 부서의 sal 최소값 보다 큰것을 구하시오. 

SELECT DNAME, MIN(SAL) FROM EMP E , DEPT D WHERE E.SAL > (SELECT MIN(SAL) FROM EMP WHERE DEPTNO = 30) AND E.DEPTNO=D.DEPTNO GROUP BY DNAME ;


4.삼각형및 사각형의 넓이를 구하는 프로그래밍을 IoC 컨테이너를 이용하여 프로그래밍 하시오.(스프링)

===========================================mainclass====================================================================

package com.javalec.ex;

import org.springframework.context.support.AbstractApplicationContext;
import org.springframework.context.support.GenericXmlApplicationContext;

public class MainClass {

	public static void main(String[] args) {
	      
	      String configLocation = "classpath:applicationCTX.xml";
	      
	      AbstractApplicationContext ctx = new GenericXmlApplicationContext(configLocation); //폴리몰피즘 적용
	      //IOC 컨테이너 적용(스프링이다)
	      MyCalCul myCal = ctx.getBean("MyCalCul", MyCalCul.class);
	      myCal.getInfo();
	      ctx.close();
	}
}

==========================================MyCalCul==========================================================================

package com.javalec.ex;


public class MyCalCul {

	private String name;
    
    private double weight;
    
    private double height;
    
    public void setName(String name) {
      this.name = name;
    }

    public void setHeight(double height) {
      this.height = height;
    }

    public void setWeight(double weight) {
      this.weight = weight;
    }
    
    public double getSquare() {
    	return weight * height ;
    }
    
    public double gettri() {
    	return (weight * height)/2 ;
    }

    public void getInfo() {
      System.out.println(name);
      System.out.println("==============");
      System.out.println("가로 : " + weight);
      System.out.println("세로 : " + height);
      System.out.println("==============");
      System.out.println("사각형 : " + getSquare());
      System.out.println("삼각형 : " + gettri());
    
    }
}

=======================================================


<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

  <bean id="MyCalCul" class="com.javalec.ex.MyCalCul">
    <property name="name">
      <value>도형 넓이구하기</value>
    </property>
    <property name="weight">
      <value>10</value> //가로
    </property>
    <property name="height">
      <value>5</value> //
    </property>
    
  </bean>
</beans>









=======================================================================






자바스크립트 구구단

<script>
document.write("<h1>");
document.write("구구단");
document.write("</h1>");
document.write("<table border=1>");

document.write("<tr>");

document.write("<td>2단</td>");
document.write("<td>3단</td>");
document.write("<td>4단</td>");
document.write("<td>5단</td>");
document.write("<td>6단</td>");
document.write("<td>7단</td>");
document.write("<td>8단</td>");
document.write("<td>9단</td>");

document.write("</tr>");

for(var i = 1 ; i <= 9 ; i++){
	
   document.write("<tr>");
   
   for(var j = 2 ; j <= 9 ; j++){
      
         document.write("<td>");
      
            document.write(j + "*" + i + " = "+ (j*i));
            
         document.write("</td>");
      
   }
   document.write("<br>");
   document.write("</tr>");
}
document.write("</table>");

</script>

===================================성젹표====================================================================================


<script>

var inputkor = prompt("국어점수를 입력하세요.", "국어.");
alert(inputkor);

var inputmath = prompt("수학점수를 입력하세요.", "수학.");
alert(inputmath);

var inputeng = prompt("영어점수를 입력하세요.", "영어");
alert(inputeng);

var inputkor = parseInt(inputkor);
var inputmath = parseInt(inputmath);
var inputeng = parseInt(inputeng);

var avg = (inputkor + inputmath + inputeng)/3 ;

switch(parseInt(avg/10)){

case 9 :  
	console.log("수");
	break;
	
case 8 :
console.log("우");
break;

case 7 : 
console.log("미");
break;

case 6 : 
console.log("양");
break;

default : 
console.log("가");
break;

}

console.log("평균 : " + avg);


</script>


di 메인 함수에서 객체주입 해주는 것 

            1.다이렉트로 new 넣어주는것 
            2.생성자
            3.setter 함수


ioc


ioc container














//스프링으로 BMI 지수 구현하기 


==============================================메인클래스=================================================================

package com.javalec.ex;

import org.springframework.context.support.AbstractApplicationContext;
import org.springframework.context.support.GenericXmlApplicationContext;

public class MainClass {

	public static void main(String[] args) {
	      
	      String configLocation = "classpath:applicationCTX.xml";
	      
	      AbstractApplicationContext ctx = new GenericXmlApplicationContext(configLocation); //폴리몰피즘 적용
	      //IOC 컨테이너 적용(스프링이다)
	      MyInfo myInfo = ctx.getBean("myInfo", MyInfo.class);
	      myInfo.getInfo();
	      ctx.close();
	}
}
		
		
		
		/*
		Calculation calculation = new Calculation();
		calculation.setFirstNum(10);
		calculation.setSecondNum(2);
		
		calculation.addition();
		calculation.subtraction();
		calculation.multiplication();
		calculation.division();
	}
	
}
*/

================================================================MY INFO=====================================================

package com.javalec.ex;

import java.util.ArrayList;

public class MyInfo {

	private String name;
    private double height;
    private double weight;
    private ArrayList<String> hobbys;
    private BMICalculator bmiCalculator;

    public BMICalculator getBmiCalculator() {
      return bmiCalculator;
    }

    public void setBmiCalculator(BMICalculator bmiCalculator) {
      this.bmiCalculator = bmiCalculator;
    }

    public void setName(String name) {
      this.name = name;
    }

    public void setHeight(double height) {
      this.height = height;
    }

    public void setWeight(double weight) {
      this.weight = weight;
    }

    public void setHobbys(ArrayList<String> hobbys) {
      this.hobbys = hobbys;
    }

    public void bmiCalculation() {
      bmiCalculator.bmiCalculation(weight, height);
    }

    public void getInfo() {
      System.out.println("이름: " + name);
      System.out.println("키: " + height);
      System.out.println("몸무게: " + weight);
      System.out.println("취미: " + hobbys);
      bmiCalculation();
    }
}

==========================================================BMICALCULATOR=======================================================

package com.javalec.ex;


public class BMICalculator {
  private double lowWeight;
  private double normal;
  private double overWeight;
  private double obesity;

  public void bmiCalculation(double weight, double height) {
    double h = height * 0.01;
    double result = weight / (h * h);

    System.out.println("BMI 지수: " + (int) result);

    if (result > obesity) {
      System.out.println("비만입니다.");
    } else if (result > overWeight) {
      System.out.println("과체중 입니다");
    } else if (result > normal) {
      System.out.println("정상 입니다");
    } else {
      System.out.println("체중 입니다");
    }
  }

  public void setLowWeight(double lowWeight) {
    this.lowWeight = lowWeight;
  }

  public void setNormal(double normal) {
    this.normal = normal;
  }

  public void setOverWeight(double overWeight) {
    this.overWeight = overWeight;
  }

  public void setObesity(double obesity) {
    this.obesity = obesity;
  }
}




=========================================APPLICATION.XML==================================================================

<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

  <bean id="bmiCalculator" class="com.javalec.ex.BMICalculator">
    <property name="lowWeight">
      <value>18.5</value>
    </property>
    <property name="normal">
      <value>23</value>
    </property>
    <property name="overWeight">
      <value>25</value>
    </property>
    <property name="obesity">
      <value>30</value>
    </property>
  </bean>

  <bean id="myInfo" class="com.javalec.ex.MyInfo">
    <property name="name">
      <value>홍길동</value>
    </property>
    <property name="height">
      <value>187</value>
    </property>
    <property name="weight">
      <value>85</value>
    </property>
    <property name="hobbys">
      <list>
        <value>수영</value>
        <value>요리</value>
        <value>독서</value>
      </list>
    </property>
    <property name="bmiCalculator">
      <ref bean="bmiCalculator"/>
    </property>
  </bean>
</beans>
